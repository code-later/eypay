== Configuration Steps

Caution: New configuration interface since version 0.3.0!

In test.rb / development.rb / staging.rb / production.rb:

  config.eypay.qpay_url           = "???" # Default: "https://secure.wirecard-cee.com/qpay/init.php"
  config.eypay.qpay_toolkit_url   = "???" # Default: "https://secure.wirecard-cee.com/qpay/toolkit.php" (since version 0.2.0)

  Since version 0.3.0 it is possible to create different logins for different countries:

  config.eypay.logins = {
    "Germany" => {
      :customer_id        => "???",
      :secret             => "???",
      :toolkit_password   => "???"
    },
    "Canada" => {
      :customer_id        => "???",
      :secret             => "???",
      :toolkit_password   => "???"
    },
    ...
  }

  config.eypay.currency           = "???" # Default: "EUR"
  config.eypay.language           = "???" # Default: "de"

  config.base_url                 = "???"
  config.eypay.service_url        = config.base_url
  config.eypay.logo_url           = config.base_url + "???"
  config.eypay.confirm_url        = config.base_url + "???" # optionally
  config.eypay.success_url        = config.base_url + "???"
  config.eypay.cancel_url         = config.base_url + "???"
  config.eypay.failure_url        = config.base_url + "???"


== Usage

Implement a controller which overrides the EypayController:

  class ExampleController < EypayController


And Override the following actions if you want specific behaviours:

  - confirm
  - failure
  - cancel
  - success

Define in your routes something like this:

  scope "/payment" do
    match "example/:action", :controller => "payment/example"
  end

  or

  resource :payments do
    member do
      post :confirm
      post :success
      post :failure
      post :cancel
    end
  end


Set all urls based on the routes configuration:

  config.qpay.success_url  = config.base_url + "/payment/example/success"
  config.qpay.cancel_url   = config.base_url + "/payment/example/cancel"
  config.qpay.failure_url  = config.base_url + "/payment/example/failure"


Use helper method to generate hidden fields for qpay

  Add the following line to your controller:

    helper :eypay

  and the following lines to your template/partial:

    hidden_fields_for_qpay(
      { :amount => 42, :payment_type => "ELV", :text => "Some text...", :description => "Some description..." },
      { :further_custom_parameters => "Some custom informations", "another_further_custom_parameters" => "Another custom information" }
    )

  The following payment types are currently supported:

    "ELV"     >   Payment by direct debit.
    "PAYPAL"  >   Payment via PayPal


== QPay Toolkit Support (since version 0.2.0)

To use QPay Toolkit, it is necessary to set the following password in your configuration files:

  :toolkit_password => "???"

Use helper method to generate hidden fields for qpay toolkit:

  hidden_fields_for_qpay_toolkit(
    { :command => "RecurPayment", :source_order_number => "Your order number from QPay", :amount => 42, :description => "Some description..." }
  )

Only the QPay Toolkit command "RecurPayment" is currently supported.
