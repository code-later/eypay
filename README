== Configuration Steps

In application.rb:

  config.eypay = ActiveSupport::OrderedOptions.new


In test.rb / development.rb / staging.rb / production.rb:

  config.base_url = "???"

  config.eypay.qpay_url     = "???"
  config.eypay.secret       = "???"
  config.eypay.customer_id  = "???"
  config.eypay.currency     = "???"
  config.eypay.language     = "???"
  config.eypay.service_url  = config.base_url
  config.eypay.bbw_logo_url = config.base_url + "???"
  config.eypay.confirm_url  = config.base_url + "???" # optionally
  config.eypay.success_url  = config.base_url + "???"
  config.eypay.cancel_url   = config.base_url + "???"
  config.eypay.failure_url  = config.base_url + "???"


== Usage

Implement a controller which overrides the EypayController:

  class ExampleController < EypayController


And Override the following actions if you want specific behaviours:

  - confirm
  - failure
  - cancel
  - success

Define in your routes something like this:

  scope "/payment" do
    match "example/:action", :controller => "payment/example"
  end


Set all urls based on the routes configuration:

  config.qpay.success_url  = config.base_url + "/payment/example/success"
  config.qpay.cancel_url   = config.base_url + "/payment/example/cancel"
  config.qpay.failure_url  = config.base_url + "/payment/example/failure"


Use helper method to generate hidden fields for qpay

  hidden_fields_for_qpay(
    { :amount => 42, :text => "Some text...", :description => "Some description..." },
    { :further_custom_parameters => "Some custom informations" }
  )
